@import "./variables.scss";

* {
  box-sizing: border-box;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2rem;
  background-color: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
  text-decoration: none;
}
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}
.top {
  height: 50vw;
  background: #fff no-repeat top center;
  background-size: auto 100%;
}
// 文本
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}
.badge {
  margin: 0 0.25rem;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  line-height: 0.9rem;
  text-align: center;
  border-radius: 50%;
  font-size: 0.6rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// flex布局
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}

$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);
@each $jcKey, $jc in $flex-jc {
  .jc-#{$jcKey} {
    justify-content: $jc;
  }
}

$flex-ai: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
);
@each $aiKey, $ai in $flex-ai {
  .ai-#{$aiKey} {
    align-items: $ai;
  }
}
.flex-1 {
  flex: 1;
}

@each $typeKey, $type in $spacing-types {
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $base-spacing-size;
    }
  }
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $base-spacing-size;
      #{$type}-right: $size * $base-spacing-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $base-spacing-size;
      #{$type}-bottom: $size * $base-spacing-size;
    }
  }
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $base-spacing-size;
      }
    }
  }
}

// button
.btn {
  border: none;
  border-radius: 0.1538rem;
  font-style: map-get($font-sizes, "sm") * $base-font-size;
  padding: 0.2rem 0.6rem;
}
// nav
.nav {
  display: flex;
  .nav-item {
    border-bottom: 0.2308rem solid transparent;
    padding-bottom: 0.1rem;
    &.active {
      color: map-get($colors, "primary");
      border-bottom: 0.2308rem solid map-get($colors, "primary");
    }
  }
  &.nav-inverse {
    .nav-item {
      color: map-get($colors, "white");
      &.active {
        border-bottom: 0.2308rem solid map-get($colors, "white");
      }
    }
  }
}
// sprite
.sprite {
  background: url("../image/index.png") no-repeat 0 0;
  background-size: 28.8462rem;
  display: inline-block;
  &.sprite-news {
    background-position: 63.546% 15.517%;
    width: 1.7692rem;
    height: 1.5385rem;
  }
  &.sprite-story {
    background-position: 90.483% 15.614%;
    width: 1.7692rem;
    height: 1.5385rem;
  }
  &.sprite-arrow {
    background-position: 38.577% 52.076%;
    width: 0.7692rem;
    height: 0.7692rem;
  }
}

.bb {
  border-bottom: 0.0769rem solid map-get($colors, "grey");
}
